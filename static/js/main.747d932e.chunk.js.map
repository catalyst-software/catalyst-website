{"version":3,"sources":["pages/Home.js","pages/About.js","pages/Features.js","App.js","serviceWorker.js","index.js","catalyst_logo.png"],"names":["tiers","title","subheader","description","withStyles","theme","companyLogo","marginLeft","logo","width","heroContent","maxWidth","margin","padding","concat","spacing","unit","cardHeader","backgroundColor","palette","grey","cardPricing","display","justifyContent","alignItems","marginBottom","cardActions","Object","defineProperty","breakpoints","up","paddingBottom","ctaButton","marginTop","props","classes","react_default","a","createElement","Fragment","className","src","alt","Typography_default","component","variant","align","color","gutterBottom","Grid_default","container","map","tier","item","key","xs","sm","md","Card_default","CardHeader_default","titleTypographyProps","subheaderTypographyProps","CardContent_default","line","Button_default","size","href","typoPad","index_es","secondTiers","twoColumns","secondColumn","paddingTop","direction","justify","wrap","classnames","@global","body","common","white","appBar","position","toolbarTitle","flex","layout","marginRight","react_router_dom","Link","to","noWrap","react_router","path","exact","Home","About","Features","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.747d932e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport logo from '../catalyst_logo.png';\n\nconst styles = theme => ({\n    companyLogo: {\n        marginLeft: -10\n    },\n    logo: {\n        width: 920\n    },\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    },\n    cardHeader: {\n        backgroundColor: theme.palette.grey[200],\n    },\n    cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing.unit * 2,\n    },\n    cardActions: {\n        [theme.breakpoints.up('sm')]: {\n            paddingBottom: theme.spacing.unit * 2,\n        },\n    },\n    ctaButton: {\n        marginTop: 48,\n        marginBottom: 96\n    }\n});\n\nconst tiers = [\n    {\n        title: 'Machine Optimization',\n        subheader: 'Find the best-path route for your operations',\n        description: [\n            'Customizable priorities',\n            'Schedule usage and downtime',\n            'Share schedules electronically',\n            'Email reminders'\n        ]\n    },\n    {\n        title: 'Inventory Prediction',\n        subheader: 'Know when you\\'re going to run out',\n        description: [\n            'Track past usage',\n            'Reorder notifications',\n            'Customizable thresholds'\n        ]\n    },\n    {\n        title: 'Centralized Ordering',\n        subheader: 'One interface for all of your vendors',\n        description: [\n            'One-click ordering',\n            'Bank-level security',\n            'Easily integrate to PayPal, Amazon, and Google'\n        ]\n    },\n];\n\nfunction Home(props) {\n    const { classes } = props;\n\n    return (\n        <React.Fragment>\n            <div className={classes.companyLogo}>\n                <img src={logo} className={classes.logo} alt=\"logo\" />\n            </div>\n\n            <div className={classes.heroContent}>\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Welcome to the era of agile plant management\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    Gone are the days of meticulously replotting Gantt charts. Catalyst makes plant management easy.\n                </Typography>\n            </div>\n\n            <Grid container spacing={40} alignItems=\"flex-end\">\n                {tiers.map(tier => (\n                    // Enterprise card is full width at sm breakpoint\n                    <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\n                        <Card>\n                            <CardHeader\n                                title={tier.title}\n                                subheader={tier.subheader}\n                                titleTypographyProps={{ align: 'center' }}\n                                subheaderTypographyProps={{ align: 'center' }}\n                                className={classes.cardHeader}\n                            />\n                            <CardContent>\n                                {tier.description.map(line => (\n                                    <Typography variant=\"subtitle1\" align=\"center\" key={line}>\n                                        {line}\n                                    </Typography>\n                                ))}\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n\n            <Button size=\"large\" variant=\"outlined\" color=\"primary\" className={classes.ctaButton} href=\"mailto:jeffrey.catalyst@gmail.com\">\n                Get started\n            </Button>\n        </React.Fragment>\n    );\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as MaterialLink } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    },\n    typoPad: {\n        paddingBottom: '16px'\n    }\n});\n\nfunction About(props) {\n    const { classes } = props;\n\n    return (\n        <React.Fragment>\n\n            <div className={classes.heroContent}>\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    About us\n                </Typography>\n                <Typography className={classes.typoPad} variant=\"h6\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                    Catalyst Software Systems is a preferred partner in chemical processing inventory management. As opposed to the complicated\n                    systems of the past, our cloud-native solutions allow you to quickly and easily track orders, place maintenance requests,\n                    and understand your inflow and outflow pipelines, even from the convenience of your phone.\n                </Typography>\n\n                <Typography className={classes.typoPad}  variant=\"h6\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                    Catalyst was founded in 2016 by then-Duke University student Jeffrey Miller. During an internship with a large chemical engineering company,\n                    Jeff began to notice the daily inefficiencies in the existing on-premise installed toolsets. Not content to leave a problem alone, he tinkered with\n                    a new style of inventory management, the core of which became the foundation of the Catalyst platform.\n                </Typography>\n\n                <Typography className={classes.typoPad}  variant=\"h6\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                    As your technology partner innovating in the often dizzying world of plant management, we understand the need for simple workflows\n                    that deliver consistent results. Leveraging machine learning and cutting-edge logistics management tools, we take the complexity\n                    out of your supply management, and present you a clear picture of the state of your plant.\n                </Typography>\n\n                <Typography variant=\"h6\" align=\"left\" color=\"textSecondary\" component=\"p\">\n                    As chemists at heart, we know that if you're looking for a reaction, you should try <MaterialLink href=\"mailto:jeffrey.catalyst@gmail.com\">adding a Catalyst</MaterialLink>.\n                </Typography>\n            </div>\n        </React.Fragment>\n    );\n}\n\nAbout.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(About);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Grid, Card, CardHeader, CardContent, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    twoColumns: {\n        maxWidth: '45%'\n    },\n    secondColumn: {\n        paddingTop: 140\n    },\n    typoPad: {\n        paddingBottom: '16px'\n    },\n    cardHeader: {\n        backgroundColor: theme.palette.grey[200],\n    },\n    heroContent: {\n        maxWidth: 600,\n        margin: '0 auto',\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\n    },\n    ctaButton: {\n        marginTop: 48,\n        marginBottom: 96\n    }\n});\n\nconst tiers = [\n    {\n        title: 'Machine Optimization',\n        subheader: 'Find the best-path route for your operations',\n        description: [\n            'Customizable priorities',\n            'Schedule usage and downtime',\n            'Share schedules electronically',\n            'Email reminders'\n        ]\n    },\n    {\n        title: 'Inventory Prediction',\n        subheader: 'Know when you\\'re going to run out',\n        description: [\n            'Track past usage',\n            'Reorder notifications',\n            'Customizable thresholds'\n        ]\n    },\n    {\n        title: 'Centralized Ordering',\n        subheader: 'One interface for all of your vendors',\n        description: [\n            'One-click ordering',\n            'Bank-level security',\n            'Easily integrate to PayPal, Amazon, and Google'\n        ]\n    },\n];\n\nconst secondTiers = [\n    {\n        title: 'Usage Tracking',\n        subheader: 'Ensure even distribution of resources',\n        description: [\n            'Track user progress and consumption',\n            'Identify and redress gaps',\n            'Streamline reporting with pre-built charts',\n            'Deeply customizable data engine'\n        ]\n    },\n    {\n        title: 'Easy to Export',\n        subheader: 'All common paper and electronic formats supported',\n        description: [\n            'Export to PDF, XML, or MS Projects',\n            'Push/pull electronically into your other plant management systems'\n        ]\n    },\n    {\n        title: 'Secure and Extensible',\n        subheader: 'Plug-and-play new functionality',\n        description: [\n            'Extensible REST-based API',\n            'SAML, OAUTH2, and OIDC support',\n            'IdP Federation available'\n        ]\n    },\n];\n\nfunction Features(props) {\n    const { classes } = props;\n\n    return (\n        <React.Fragment>\n\n\n            <div className={classes.heroContent}>\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Catalyst works so you don't have to\n                </Typography>\n                <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    Using best-in-class technology to streamline your work is just the start.\n                </Typography>\n            </div>\n\n            <Grid container direction=\"row\" justify=\"space-between\">\n                <Grid className={classes.twoColumns} container direction=\"column\" spacing={40} wrap=\"nowrap\">\n                    {tiers.map(tier => (\n                        <Grid item key={tier.title}>\n                            <Card>\n                                <CardHeader\n                                    title={tier.title}\n                                    subheader={tier.subheader}\n                                    titleTypographyProps={{ align: 'center' }}\n                                    subheaderTypographyProps={{ align: 'center' }}\n                                    className={classes.cardHeader}\n                                />\n                                <CardContent>\n                                    {tier.description.map(line => (\n                                        <Typography variant=\"subtitle1\" align=\"center\" key={line}>\n                                            {line}\n                                        </Typography>\n                                    ))}\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <Grid className={classnames(classes.twoColumns, classes.secondColumn)} container direction=\"column\" spacing={40} wrap=\"nowrap\">\n                    {secondTiers.map(tier => (\n                        <Grid item key={tier.title}>\n                            <Card>\n                                <CardHeader\n                                    title={tier.title}\n                                    subheader={tier.subheader}\n                                    titleTypographyProps={{ align: 'center' }}\n                                    subheaderTypographyProps={{ align: 'center' }}\n                                    className={classes.cardHeader}\n                                />\n                                <CardContent>\n                                    {tier.description.map(line => (\n                                        <Typography variant=\"subtitle1\" align=\"center\" key={line}>\n                                            {line}\n                                        </Typography>\n                                    ))}\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n\n\n            <Button size=\"large\" variant=\"outlined\" color=\"primary\" className={classes.ctaButton} href=\"mailto:jeffrey.catalyst@gmail.com\">\n                Get started\n            </Button>\n        </React.Fragment>\n    );\n}\n\nFeatures.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Features);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { Route } from 'react-router';\nimport { AppBar, Button, CssBaseline, Toolbar, Link as MaterialLink } from '@material-ui/core';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Features from './pages/Features';\nimport { withStyles } from '@material-ui/core/styles';\nimport './App.css';\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  appBar: {\n    position: 'relative',\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(900 + theme.spacing.unit * 3 * 2)]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n});\n\nfunction App(props) {\n\n  const { classes } = props;\n\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <CssBaseline />\n        <Router>\n          <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n            <Toolbar>\n              <MaterialLink component={Link} to=\"/\" variant=\"h6\" color=\"inherit\" noWrap align=\"left\" className={classes.toolbarTitle}>\n                Catalyst Software\n              </MaterialLink>\n              <Button component={Link} to=\"/features\">Features</Button>\n              <Button component={Link} to=\"/about\">About Catalyst</Button>\n              <Button href=\"mailto:jeffrey.catalyst@gmail.com\">Contact Us</Button>\n            </Toolbar>\n          </AppBar>\n          <main className={classes.layout}>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about/\" component={About} />\n            <Route path=\"/features/\" component={Features} />\n          </main>\n        </Router>\n      </React.Fragment>\n    </div>\n  );\n}\n\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/catalyst_logo.fc4ab896.png\";"],"sourceRoot":""}